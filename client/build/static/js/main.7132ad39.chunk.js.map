{"version":3,"sources":["components/atoms/Anchor/style.ts","components/atoms/Anchor/index.tsx","components/atoms/Button/style.ts","components/atoms/Button/index.tsx","components/atoms/Input/style.ts","components/atoms/Input/index.tsx","components/atoms/LabelDate/style.ts","components/atoms/LabelDate/index.tsx","components/atoms/Img/style.ts","components/atoms/Img/index.tsx","components/atoms/NavBrand/style.ts","components/atoms/NavItem/style.ts","components/atoms/NavItem/index.tsx","components/atoms/Paragraph/style.ts","components/atoms/Paragraph/index.tsx","components/atoms/Typography/style.ts","components/atoms/Typography/index.tsx","components/atoms/TextArea/style.ts","components/atoms/TextArea/index.tsx","components/molecules/AboutLabels/style.ts","commons/string/index.ts","components/molecules/AboutLabels/index.tsx","components/molecules/ContactForm/style.ts","components/molecules/ContactForm/index.tsx","components/molecules/ContactLabelBlock/style.ts","components/molecules/ContactLabelBlock/index.tsx","components/molecules/ContactLabels/style.ts","components/molecules/ContactLabels/index.tsx","components/molecules/ContactInputs/style.ts","components/molecules/ContactInputs/index.tsx","components/molecules/ColumnCardGrid/style.ts","components/molecules/ColumnCardGrid/index.tsx","components/molecules/ColumnDirectionCard/style.ts","components/molecules/ColumnDirectionCard/index.tsx","components/molecules/DropDownItems/style.ts","components/molecules/InformationLabel/style.ts","components/molecules/InformationLabel/index.tsx","components/molecules/InformationLabelList/style.ts","components/molecules/InformationLabelList/index.tsx","components/molecules/RowDirectionCard/style.ts","components/molecules/RowDirectionCard/index.tsx","components/molecules/RowCardGrid/style.ts","components/molecules/RowCardGrid/index.tsx","components/molecules/ProgramLabels/style.ts","components/molecules/ProgramLabels/index.tsx","components/molecules/ProgramGrid/style.ts","components/molecules/ProgramGrid/index.tsx","components/organisms/AboutSection/style.ts","components/organisms/AboutSection/index.tsx","components/organisms/ContactSection/style.ts","components/organisms/ContactSection/index.tsx","components/organisms/EventsSection/style.ts","components/organisms/EventsSection/index.tsx","components/organisms/GreetingSection/style.ts","components/organisms/GreetingSection/index.tsx","components/organisms/Header/style.ts","components/organisms/Header/index.tsx","commons/__routes__/index.ts","components/organisms/InformationSection/style.ts","components/organisms/InformationSection/index.tsx","components/organisms/NewsSection/style.ts","components/organisms/NewsSection/index.tsx","components/organisms/ProgramSection/style.ts","components/organisms/ProgramSection/index.tsx","pages/home/templates/index.tsx","commons/__mock_json__/index.ts","pages/home/index.tsx","App.tsx","serviceWorker.ts","rootReducer.ts","store.ts","index.tsx"],"names":["StyledAnchor","styled","Link","props","color","Anchor","to","children","themeFunc","theme","hoverThemFucn","bootstrapBtn","BtnStyle","css","StyledLink","attrs","className","a","Btn","button","Button","href","onClick","Input","input","placeholder","LabelDate","span","StyledImg","img","objectFit","Img","src","alt","length","undefined","defaultProps","NavItem","li","NavAnchor","ParagraphStyle","p","textAlign","Paragraph","TypographyStyle","isItalic","isBold","styleType","Typography","StyledTextArea","textarea","TextArea","Container","div","WELCOME","INTERNATIONAL_STUDENTS","LOCATION","SECTION1_PARAGRAPH","ABOUT_TITLE","ABOUT_PARAGRAPH1","ABOUT_PARAGRAPH2","STUART_MARY_SMITH","COLUMN_CARD_BODY","UPCOMING_EVENT","LATEST_NEWS","LATEST_NEWS_DESC","INFORMATION","FORSTUDENTS","FORVOLUNTEER","AboutLabels","LabelWrapper","section","FormWrapper","ContactForm","ContactInputs","notes","title","content","ContactLabelBlock","map","note","key","uuid4","Row","ContactLabels","ButtonWrapper","text","ColumnCardGrid","ImgWrapper","ContentWrapper","TypographyWrapper","DateWrapper","ParagraphWrapper","BtnWrapper","ColumnDirectionCard","date","body","InformationLables","InformationLabelList","infos","info","InformationLabel","LinkWrapper","RowDirectionCard","rowDirectionCard","style","RowCardGrid","cards","card","ProgramLabels","label","ProgramGrid","labels","LabelsWrapper","AboutSection","process","ContactSection","bgUrl","TitleWrapper","CardGridWrapper","EventsSection","bgImg","GreetingSection","styles","bmBurgerButton","position","width","height","left","top","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","fontSize","bmMorphShape","fill","bmItemList","listStyle","bmItem","bmOverlay","Header","Sc","React","Component","BoxWrapper","InformationSection","stuInfos","voluInfos","CardsWrapper","NewsSection","mobileBgUrl","ProgramGridWrapper","ProgramSection","HomeTemplate","HomePage","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7132ad39.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype StyledAnchorProps = {\r\n  color: \"primary\" | \"secondary\" | \"white\" | \"gray\" | \"black\";\r\n};\r\n\r\nexport const StyledAnchor = styled(Link)<StyledAnchorProps>`\r\n  color: ${props => {\r\n    if (props.color === \"primary\") return \"#000000\";\r\n    else if (props.color === \"secondary\") return \"#fff200\";\r\n    else if (props.color === \"white\") return \"#ffffff\";\r\n    else if (props.color === \"gray\") return \"#718093\";\r\n    else return \"#000000\";\r\n  }};\r\n  transition-property: color;\r\n  transition-duration: 1s;\r\n  :hover {\r\n    text-decoration: none;\r\n    color: #f7e70f;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\n\r\ntype AnchorProps = {\r\n  to: string;\r\n  children: React.ReactNode;\r\n  color?: \"primary\" | \"secondary\" | \"white\" | \"gray\" | \"black\";\r\n};\r\n\r\nfunction Anchor({\r\n  to,\r\n  children,\r\n  color = \"black\"\r\n}: AnchorProps): React.ReactElement {\r\n  return (\r\n    <Sc.StyledAnchor to={to} color={color}>\r\n      {children}\r\n    </Sc.StyledAnchor>\r\n  );\r\n}\r\n\r\nexport default Anchor;\r\n","import styled, { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst themeFunc = props => {\r\n  if (props.theme === \"primary\") return \"#fff200\";\r\n  else if (props.theme === \"danger\") return \"#C70000\";\r\n  else if (props.theme === \"success\") return \"#00C2FF\";\r\n};\r\n\r\nconst hoverThemFucn = props => {\r\n  if (props.theme === \"primary\") return \"#DCD221\";\r\n  else if (props.theme === \"danger\") return \"#F24949\";\r\n  else if (props.theme === \"success\") return \"#3FAACC\";\r\n};\r\n\r\nconst bootstrapBtn = props => {\r\n  if (props.theme === \"primary\") return \"primary\";\r\n  else if (props.theme === \"danger\") return \"danger\";\r\n  else if (props.theme === \"success\") return \"success\";\r\n};\r\n\r\nconst BtnStyle = css`\r\n  background-color: ${themeFunc};\r\n  border-color: ${themeFunc};\r\n  color: #ffffff;\r\n\r\n  :hover {\r\n    background-color: ${hoverThemFucn};\r\n    border-color: ${hoverThemFucn};\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link).attrs({\r\n  className: `btn btn-${bootstrapBtn}`\r\n})`\r\n  ${BtnStyle}\r\n`;\r\n\r\nexport const Anchor = styled.a.attrs({\r\n  className: `btn btn-${bootstrapBtn}`\r\n})`\r\n  ${BtnStyle}\r\n`;\r\n\r\nexport const Btn = styled.button.attrs({\r\n  className: `btn btn-${bootstrapBtn}`\r\n})`\r\n  ${BtnStyle}\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\n\r\ntype ButtonProps = {\r\n  /** 버튼 색깔 */\r\n  theme: \"primary\" | \"danger\" | \"success\";\r\n  /** Routing object of react-router-dom */\r\n  to?: string;\r\n  /** Routing Attribute of HTML DOM */\r\n  href?: string;\r\n  /** Button 클릭할 때 호출되는 MouseEvent 함수 */\r\n  onClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n};\r\n\r\n/** This is Button Component */\r\nconst Button: React.FC<ButtonProps> = ({\r\n  children,\r\n  theme,\r\n  to,\r\n  href,\r\n  onClick\r\n}) => {\r\n  if (to) {\r\n    return (\r\n      <Sc.StyledLink to={to} theme={theme}>\r\n        {children}\r\n      </Sc.StyledLink>\r\n    );\r\n  } else if (href) {\r\n    return (\r\n      <Sc.Anchor href={href} theme={theme}>\r\n        {children}\r\n      </Sc.Anchor>\r\n    );\r\n  } else {\r\n    return (\r\n      <Sc.Btn theme={theme} onClick={onClick}>\r\n        {children}\r\n      </Sc.Btn>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\ntype InputProps = {};\r\n\r\nexport const Input = styled.input<InputProps>`\r\n  width: 100%;\r\n  height: 50px;\r\n  border: 2px solid #999999;\r\n  :focus {\r\n    border: 2px solid #dcd221;\r\n  }\r\n  &::placeholder {\r\n    font-family: Georgia;\r\n    font-style: normal;\r\n    padding-left: 5px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\n\r\ntype InputProps = {\r\n  placeholder?: string;\r\n};\r\n\r\nconst Input: React.FC<InputProps> = ({ placeholder }) => {\r\n  return <Sc.Input placeholder={placeholder} />;\r\n};\r\n\r\nexport default Input;\r\n","import styled from \"styled-components\";\r\n\r\ntype LabelDateProps = {\r\n  color: \"black\" | \"gray\" | \"white\" | string;\r\n};\r\n\r\nexport const LabelDate = styled.span<LabelDateProps>`\r\n  font-style: italic;\r\n  font-weight: normal;\r\n  font-size: 13px;\r\n  line-height: 15px;\r\n  color: ${props => {\r\n    if (props.color === \"black\") return \"#000000\";\r\n    else if (props.color === \"white\") return \"#ffffff\";\r\n    else if (props.color === \"gray\") return \"#718093\";\r\n    else return \"#000000\";\r\n  }};\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\n\r\ntype LabelDateProps = {\r\n  color: \"black\" | \"gray\" | string;\r\n};\r\n\r\nconst LabelDate: React.FC<LabelDateProps> = ({ children, color }) => {\r\n  return <Sc.LabelDate color={color}>{children}</Sc.LabelDate>;\r\n};\r\n\r\nexport default LabelDate;\r\n","import styled from \"styled-components\";\r\n\r\ntype StyledImgProps = {\r\n  objectFit?: \"fill\" | \"contain\" | \"cover\" | \"none\" | \"scale-down\" | string;\r\n};\r\n\r\nexport const StyledImg = styled.img<StyledImgProps>`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: ${props => (props.objectFit ? props.objectFit : \"none\")};\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\n\r\ntype ImgProps = {\r\n  /** Image url. If src has nothing, the image shows \"no image available\" image. */\r\n  src?: string;\r\n  /** Alt Tag */\r\n  alt?: string;\r\n  /** CSS Property about how the image should be resized to fit its container. */\r\n  objectFit?: \"fill\" | \"contain\" | \"cover\" | \"none\" | \"scale-down\" | string;\r\n};\r\n\r\nfunction Img({ src, alt, objectFit }: ImgProps): React.ReactElement {\r\n  src =\r\n    src?.length === 0 || src === undefined\r\n      ? \"https://image.shutterstock.com/image-vector/no-image-available-icon-photo-260nw-1251146734.jpg\"\r\n      : src;\r\n  return <Sc.StyledImg src={src} alt={alt} objectFit={objectFit} />;\r\n}\r\n\r\nImg.defaultProps = {\r\n  src:\r\n    \"https://image.shutterstock.com/image-vector/no-image-available-icon-photo-260nw-1251146734.jpg\"\r\n};\r\n\r\nexport default Img;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const NavBrand = styled(Link).attrs({})`\r\n  color: #373a3c;\r\n  font-size: 20px;\r\n  line-height: 17px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const NavItem = styled.li`\r\n  color: #b8b7ad;\r\n`;\r\n\r\nexport const NavAnchor = styled(Link)`\r\n  color: #b8b7ad;\r\n\r\n  :hover,\r\n  :active {\r\n    color: #fff200;\r\n    text-decoration-line: underline;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\n\r\ntype NavItemProps = {\r\n  to: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst NavItem: React.FC<NavItemProps> = ({ children, to }) => {\r\n  return (\r\n    <Sc.NavItem>\r\n      <Sc.NavAnchor to={to}>{children}</Sc.NavAnchor>\r\n    </Sc.NavItem>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import styled, { ThemedStyledProps } from \"styled-components\";\r\n\r\ntype ParagraphStyleProps = {\r\n  color: \"black\" | \"white\" | \"gray\" | string;\r\n  textAlign: \"left\" | \"right\" | \"center\" | \"justify\" | \"inherit\";\r\n};\r\n\r\nconst colorPick = (props: ThemedStyledProps<ParagraphStyleProps, any>) => {\r\n  if (props.color === \"black\") return \"#000000\";\r\n  else if (props.color === \"white\") return \"#ffffff\";\r\n  else if (props.color === \"gray\") return \"#718092\";\r\n  else return \"#000000\";\r\n};\r\n\r\nexport const ParagraphStyle = styled.p<ParagraphStyleProps>`\r\n  font-size: 18px;\r\n  line-height: 20px;\r\n  text-align: ${props => props.textAlign};\r\n  color: ${colorPick};\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\n\r\ntype ParagraphProps = {\r\n  /** Font Color */\r\n  color: \"black\" | \"white\" | \"gray\" | string;\r\n  textAlign?: \"left\" | \"right\" | \"center\" | \"justify\" | \"inherit\";\r\n};\r\n\r\nconst Paragraph: React.FC<ParagraphProps> = ({\r\n  children,\r\n  color,\r\n  textAlign = \"center\"\r\n}) => {\r\n  return (\r\n    <Sc.ParagraphStyle color={color} textAlign={textAlign}>\r\n      {children}\r\n    </Sc.ParagraphStyle>\r\n  );\r\n};\r\n\r\nexport default Paragraph;\r\n","import styled, { css, ThemedStyledProps } from \"styled-components\";\r\n\r\ninterface TypographyStyleProps {\r\n  styleType: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\r\n  textAlign: \"left\" | \"right\" | \"center\" | \"justify\" | \"inherit\";\r\n  isItalic?: boolean;\r\n  isBold?: boolean;\r\n  color: \"primary\" | \"secondary\" | \"white\" | \"gray\";\r\n}\r\n\r\nexport const styleTypeFunc = (\r\n  props: ThemedStyledProps<TypographyStyleProps, any>\r\n) => {\r\n  if (props.styleType === \"h1\") {\r\n    return css`\r\n      font-size: 2.5rem;\r\n    `;\r\n  } else if (props.styleType === \"h2\") {\r\n    return css`\r\n      font-size: 2rem;\r\n    `;\r\n  } else if (props.styleType === \"h3\") {\r\n    return css`\r\n      font-size: 1.75rem;\r\n    `;\r\n  } else if (props.styleType === \"h4\") {\r\n    return css`\r\n      font-size: 1.5rem;\r\n    `;\r\n  } else if (props.styleType === \"h5\") {\r\n    return css`\r\n      font-size: 1.25rem;\r\n    `;\r\n  } else if (props.styleType === \"h6\") {\r\n    return css`\r\n      font-size: 1rem;\r\n    `;\r\n  }\r\n};\r\n\r\nexport const TypographyStyle = styled.span<TypographyStyleProps>`\r\n  font-style: ${props => (props.isItalic ? \"italic\" : \"normal\")};\r\n  font-weight: ${props => (props.isBold ? \"bold\" : \"normal\")};\r\n  color: ${props => {\r\n    if (props.color === \"primary\") return \"#000000\";\r\n    else if (props.color === \"secondary\") return \"#fff200\";\r\n    else if (props.color === \"white\") return \"#ffffff\";\r\n    else if (props.color === \"gray\") return \"#718093\";\r\n    else return \"#000000\";\r\n  }};\r\n  ${styleTypeFunc};\r\n  line-height: 1.2;\r\n  text-align: ${props => props.textAlign};\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\n\r\ninterface IProps {\r\n  styleType: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\r\n  isItalic?: boolean;\r\n  isBold?: boolean;\r\n  textAlign?: \"left\" | \"right\" | \"center\" | \"justify\" | \"inherit\";\r\n  color?: \"primary\" | \"secondary\" | \"white\" | \"gray\";\r\n}\r\n\r\nconst Typography: React.FC<IProps> = ({\r\n  children,\r\n  styleType,\r\n  color = \"primary\",\r\n  textAlign = \"left\",\r\n  isItalic = false,\r\n  isBold = false\r\n}) => {\r\n  return (\r\n    <Sc.TypographyStyle\r\n      styleType={styleType}\r\n      textAlign={textAlign}\r\n      isItalic={isItalic}\r\n      isBold={isBold}\r\n      color={color}\r\n    >\r\n      {children}\r\n    </Sc.TypographyStyle>\r\n  );\r\n};\r\n\r\nexport default Typography;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledTextArea = styled.textarea`\r\n  width: 100%;\r\n  height: 5rem;\r\n  border: 2px solid #999999;\r\n  :focus {\r\n    border: 2px solid #dcd221;\r\n  }\r\n\r\n  &::placeholder {\r\n    font-family: Georgia;\r\n    font-style: normal;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\n\r\ntype TextAreaProps = {\r\n  placeholder?: string;\r\n};\r\nconst TextArea: React.FC<TextAreaProps> = ({ children, placeholder }) => {\r\n  return (\r\n    <Sc.StyledTextArea placeholder={placeholder}>{children}</Sc.StyledTextArea>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  row-gap: 2rem;\r\n  padding: 4rem 2rem;\r\n\r\n  @media screen and (max-width: 740px) {\r\n    padding: 2rem;\r\n  }\r\n`;\r\n","// Home Page\r\nexport const WELCOME = \"Welcome\";\r\nexport const INTERNATIONAL_STUDENTS = \"International Students\";\r\nexport const LOCATION = \"London, Ontario, Canada\";\r\nexport const SECTION1_PARAGRAPH =\r\n  \"We offer programs which will help you to adapt to life in Canada, to thrive in your life here, to improve your English and to build a strong network of relationships\";\r\n\r\nexport const ABOUT_TITLE = \"Why Are We Involved?\";\r\nexport const ABOUT_PARAGRAPH1 =\r\n  \"We have travelled and lived in other countries and understand many of the stresses and unknowns that international students face upon arrival in Canada...especially the need for friendship and language help.\";\r\nexport const ABOUT_PARAGRAPH2 =\r\n  \"Our lives have been enriched through friendships with people of many different cultural and faith backgrounds who have come from all over the world. We want to make it easier for other people to have similar life-enriching relationships. We are working in London and offer opportunities for Canadians and International students to build friendships.\";\r\nexport const STUART_MARY_SMITH = \"Stuart & Mary Smith - London City Leaders\";\r\n\r\nexport const COLUMN_CARD_TITLE = \"Speaker Interviews with J.Doe\";\r\nexport const COLUMN_CARD_DATE = \"January 01, 2020\";\r\nexport const COLUMN_CARD_LOCATION = \"11 Rose St. London ON\";\r\nexport const COLUMN_CARD_BODY =\r\n  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean quis urna vitae eros vulputate mollis eget finibus elit. Quisque sed.\";\r\n\r\nexport const UPCOMING_EVENT = \"Upcoming Events\";\r\n\r\nexport const LATEST_NEWS = \"Latest News\";\r\nexport const LATEST_NEWS_DESC =\r\n  \"Latest information on friendship partners, politics around us\";\r\n\r\nexport const INFORMATION = \"Information\";\r\nexport const FORSTUDENTS = \"For Students\";\r\nexport const FORVOLUNTEER = \"For Volunteer\";\r\n\r\nexport const CONTACT = \"Contact\";\r\nexport const CONTACT_NUMBER = \"Contact Number\";\r\nexport const NUMBER = \"+1 123 123 1234\";\r\nexport const EMAIL_ADDRESS = \"Email Address\";\r\nexport const EMAIL = \"email@email.com\";\r\nexport const WEBSITE = \"Webiste\";\r\nexport const WEBSITE_ADDRESS = \"www.abc.com\"; //\"http://www.internationalstudentslondon.org/\"\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport {\r\n  ABOUT_TITLE,\r\n  ABOUT_PARAGRAPH1,\r\n  ABOUT_PARAGRAPH2,\r\n  STUART_MARY_SMITH\r\n} from \"commons/string\";\r\nimport { Typography, Paragraph } from \"components\";\r\n\r\ntype AboutLabelsProps = {};\r\n\r\nfunction AboutLabels({}: AboutLabelsProps): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      <Typography styleType=\"h2\" isBold={true} color=\"primary\">\r\n        {ABOUT_TITLE}\r\n      </Typography>\r\n      <Paragraph color=\"gray\" textAlign=\"left\">\r\n        {ABOUT_PARAGRAPH1}\r\n      </Paragraph>\r\n      <Paragraph color=\"gray\" textAlign=\"left\">\r\n        {ABOUT_PARAGRAPH2}\r\n      </Paragraph>\r\n      <Typography styleType=\"h3\" color=\"gray\" textAlign=\"right\">\r\n        {STUART_MARY_SMITH}\r\n      </Typography>\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default AboutLabels;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: row;\r\n  padding: 2rem;\r\n`;\r\n\r\nexport const LabelWrapper = styled.section`\r\n  display: grid;\r\n  justify-content: center;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const FormWrapper = styled.section`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  column-gap: 0.5rem;\r\n\r\n  /* Mobile */\r\n  @media screen and (max-width: 740px) {\r\n    grid-auto-flow: row;\r\n    grid-template-columns: 1fr;\r\n    row-gap: 1rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ContactLabelBlock, ContactInputs, Typography } from \"components\";\r\nimport * as Sc from \"./style\";\r\n\r\ntype ContactFormProps = {};\r\n\r\nfunction ContactForm({}: ContactFormProps): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      <Sc.LabelWrapper>\r\n        <Typography styleType=\"h1\" isBold={true} color=\"primary\">\r\n          Contact\r\n        </Typography>\r\n      </Sc.LabelWrapper>\r\n      <Sc.FormWrapper>\r\n        <ContactLabelBlock />\r\n        <ContactInputs />\r\n      </Sc.FormWrapper>\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: row;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { ContactLabels } from \"components\";\r\nimport {\r\n  CONTACT_NUMBER,\r\n  NUMBER,\r\n  EMAIL_ADDRESS,\r\n  EMAIL,\r\n  WEBSITE,\r\n  WEBSITE_ADDRESS\r\n} from \"commons/string\";\r\nimport uuid4 from \"uuid4\";\r\n\r\ntype ContactLabelProps = {};\r\n\r\nconst notes = [\r\n  {\r\n    title: CONTACT_NUMBER,\r\n    content: NUMBER\r\n  },\r\n  {\r\n    title: EMAIL_ADDRESS,\r\n    content: EMAIL\r\n  },\r\n  {\r\n    title: WEBSITE,\r\n    content: WEBSITE_ADDRESS\r\n    // content: \"http://www.internationalstudentslondon.org/\"\r\n  }\r\n];\r\n\r\nconst ContactLabelBlock: React.FC<ContactLabelProps> = ({}) => {\r\n  return (\r\n    <Sc.Container>\r\n      {notes.map(note => (\r\n        <ContactLabels key={uuid4()} note={note} />\r\n      ))}\r\n    </Sc.Container>\r\n  );\r\n};\r\n\r\nexport default ContactLabelBlock;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Row = styled.section`\r\n  display: grid;\r\n  grid-auto-flow: row;\r\n  row-gap: 1%;\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { Typography } from \"components\";\r\n\r\ntype ContactLabelProps = {\r\n  note: { title: string; content: string };\r\n};\r\n\r\nconst ContactLabels: React.FC<ContactLabelProps> = ({ note }) => {\r\n  const { title, content } = note;\r\n  return (\r\n    <Sc.Row>\r\n      <Typography styleType=\"h4\" color=\"primary\">\r\n        {title}\r\n      </Typography>\r\n      <Typography styleType=\"h4\" color=\"secondary\">\r\n        {content}\r\n      </Typography>\r\n    </Sc.Row>\r\n  );\r\n};\r\n\r\nexport default ContactLabels;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: row;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.section`\r\n  display: grid;\r\n  justify-content: center;\r\n  /* width: 3rem; */\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { Input, TextArea, Button } from \"components\";\r\nimport { text } from \"@storybook/addon-knobs\";\r\n\r\ntype ContactFormProps = {};\r\n\r\nfunction ContactForm({}: ContactFormProps): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      <Input placeholder={text(\"1st row placeholder\", \"Your Name\")} />\r\n      <Input placeholder={text(\"2nd row placeholder\", \"Your Email\")} />\r\n      <Input placeholder={text(\"3rd row placeholder\", \"Subject\")} />\r\n      <TextArea placeholder={text(\"4th row placeholder\", \"Message\")} />\r\n      <Sc.ButtonWrapper>\r\n        <Button theme=\"primary\">Send</Button>\r\n      </Sc.ButtonWrapper>\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  column-gap: 3.75rem;\r\n\r\n  /* Mobile */\r\n  @media screen and (max-width: 740px) {\r\n    grid-auto-flow: row;\r\n    row-gap: 1rem;\r\n  }\r\n\r\n  /* Tablet */\r\n  @media screen and (min-width: 741px) and (max-width: 1120px) {\r\n    grid-auto-flow: row;\r\n    row-gap: 0.5rem;\r\n    padding: 1.5rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { ColumnDirectionCard } from \"components\";\r\nimport { note } from \"commons/__types__\";\r\n\r\ntype ColumnCardGridProps = {\r\n  notes: note[];\r\n};\r\n\r\nfunction ColumnCardGrid({ notes }: ColumnCardGridProps): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      {notes.map(note => (\r\n        <ColumnDirectionCard note={note} />\r\n      ))}\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default ColumnCardGrid;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-template-columns: 10rem auto;\r\n\r\n  /* Mobile */\r\n  @media screen and (max-width: 740px) {\r\n    /* grid-template-columns: 7.5rem auto; */\r\n    grid-auto-flow: row;\r\n    grid-template-rows: 10rem auto;\r\n    grid-template-columns: unset;\r\n  }\r\n`;\r\n\r\nexport const ImgWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 10px;\r\n  background-color: #ffffff;\r\n`;\r\n\r\nexport const TypographyWrapper = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const DateWrapper = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  justify-content: center;\r\n  padding: 7px;\r\n`;\r\n\r\nexport const ParagraphWrapper = styled.div`\r\n  display: grid;\r\n  justify-content: left;\r\n`;\r\n\r\nexport const BtnWrapper = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { Button, LabelDate, Paragraph, Typography, Img } from \"components\";\r\nimport { note } from \"commons/__types__\";\r\n\r\ntype ColumnDirectionCardProps = {\r\n  /** Title, Date, Body, Image Src */\r\n  note: note;\r\n};\r\n\r\nfunction ColumnDirectionCard({\r\n  note\r\n}: ColumnDirectionCardProps): React.ReactElement {\r\n  const { title, date, body, to, src } = note;\r\n  return (\r\n    <Sc.Container>\r\n      <Sc.ImgWrapper>\r\n        <Img src={src} alt={title} objectFit=\"fill\" />\r\n      </Sc.ImgWrapper>\r\n      <Sc.ContentWrapper>\r\n        <Sc.TypographyWrapper>\r\n          <Typography styleType=\"h4\" color=\"primary\">\r\n            {title}\r\n          </Typography>\r\n        </Sc.TypographyWrapper>\r\n        <Sc.DateWrapper>\r\n          <LabelDate color=\"gray\">{date}</LabelDate>\r\n        </Sc.DateWrapper>\r\n        <Sc.ParagraphWrapper>\r\n          <Paragraph color=\"gray\">{body}</Paragraph>\r\n        </Sc.ParagraphWrapper>\r\n        <Sc.BtnWrapper>\r\n          <Button theme=\"primary\" to={to}>\r\n            Read More\r\n          </Button>\r\n        </Sc.BtnWrapper>\r\n      </Sc.ContentWrapper>\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default ColumnDirectionCard;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Dropdown = styled.li.attrs({\r\n  className: \"nav-item dropdown\"\r\n})``;\r\n\r\nexport const DropDown = styled.a.attrs({\r\n  className: \"nav-link dropdown-toggle\",\r\n  [\"data-toggle\"]: \"dropdown\",\r\n  role: \"button\",\r\n  href: \"\",\r\n  [\"aria-haspopup\"]: \"true\",\r\n  [\"aria-expanded\"]: \"false\"\r\n})`\r\n  color: #373a3c;\r\n\r\n  :hover {\r\n    color: #fff200;\r\n  }\r\n`;\r\n\r\nexport const DropDownMenu = styled.div.attrs({\r\n  className: \"dropdown-menu\"\r\n})``;\r\n\r\nexport const Item = styled(Link).attrs({\r\n  className: \"dropdown-item\"\r\n})``;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n\r\n  @media screen and (max-width: 740px) {\r\n    grid-auto-flow: row;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { Typography, LabelDate } from \"components\";\r\nimport { information } from \"commons/__types__\";\r\n\r\nfunction InformationLables({ title, date }: information): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      <Typography styleType=\"h3\" color=\"primary\">\r\n        {title}\r\n      </Typography>\r\n      <LabelDate color=\"black\">{date}</LabelDate>\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default InformationLables;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  row-gap: 2rem;\r\n\r\n  background: rgba(255, 255, 255, 0.6);\r\n  border-radius: 40px;\r\n\r\n  padding: 2rem;\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { InformationLabel } from \"components\";\r\nimport { information } from \"commons/__types__\";\r\n\r\ntype InformationLabelListProps = {\r\n  infos: information[];\r\n};\r\n\r\nfunction InformationLabelList({\r\n  infos\r\n}: InformationLabelListProps): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      {infos.map(info => (\r\n        <InformationLabel title={info.title} date={info.date} />\r\n      ))}\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default InformationLabelList;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const LinkWrapper = styled(Link)`\r\n  display: grid;\r\n  grid-auto-flow: row;\r\n  grid-template-rows: 1fr 0.6fr;\r\n\r\n  &:hover {\r\n    background-color: #fff200;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const ImgWrapper = styled.section`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ContentWrapper = styled.section`\r\n  display: grid;\r\n  grid-template-rows: 0.15fr 0.5fr 0fr;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { Img, LabelDate, Typography } from \"components\";\r\nimport { rowDirectionCard } from \"commons/__types__\";\r\n\r\ntype RowDirectionCardProps = {\r\n  /** Card Props */\r\n  rowDirectionCard: rowDirectionCard;\r\n};\r\n\r\nfunction RowDirectionCard({\r\n  rowDirectionCard\r\n}: RowDirectionCardProps): React.ReactElement {\r\n  const { alt = \"img\", src, to } = rowDirectionCard;\r\n  return (\r\n    <Sc.LinkWrapper to={to}>\r\n      <Sc.ImgWrapper>\r\n        <Img alt={alt} objectFit=\"cover\" src={src} />\r\n      </Sc.ImgWrapper>\r\n      <Sc.ContentWrapper>\r\n        <LabelDate color=\"gray\">January 01, 2020</LabelDate>\r\n        <Typography styleType=\"h4\" color=\"primary\" textAlign=\"center\">\r\n          Give To End Childhood ilnesses\r\n        </Typography>\r\n        <Typography\r\n          styleType=\"h6\"\r\n          color=\"primary\"\r\n          isItalic={true}\r\n          textAlign=\"right\"\r\n        >\r\n          <span style={{ color: \"#718093\" }}>By</span> Stuart & Mary\r\n        </Typography>\r\n      </Sc.ContentWrapper>\r\n    </Sc.LinkWrapper>\r\n  );\r\n}\r\n\r\nexport default RowDirectionCard;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  column-gap: 1.5rem;\r\n\r\n  /* Mobile */\r\n  @media screen and (max-width: 740px) {\r\n    grid-auto-flow: row;\r\n    row-gap: 1.5rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { RowDirectionCard } from \"components\";\r\nimport { rowDirectionCard } from \"commons/__types__\";\r\n\r\ntype RowCardGridProps = {\r\n  cards: rowDirectionCard[];\r\n};\r\n\r\nfunction RowCardGrid({ cards }: RowCardGridProps): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      {cards.map(card => (\r\n        <RowDirectionCard rowDirectionCard={card} />\r\n      ))}\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default RowCardGrid;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  row-gap: 1.5rem;\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { Typography, Paragraph } from \"components\";\r\nimport { programLabels } from \"commons/__types__\";\r\n\r\ntype ProgramLabelsProps = {\r\n  label: programLabels;\r\n};\r\n\r\nfunction ProgramLabels({ label }: ProgramLabelsProps): React.ReactElement {\r\n  const { title, content } = label;\r\n  return (\r\n    <Sc.Container>\r\n      <Typography styleType=\"h4\" color=\"secondary\">\r\n        {title}\r\n      </Typography>\r\n      <Paragraph color=\"white\" textAlign=\"left\">\r\n        {content}\r\n      </Paragraph>\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default ProgramLabels;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  column-gap: 4rem;\r\n\r\n  @media screen and (max-width: 780px) {\r\n    grid-auto-flow: row;\r\n    column-gap: unset;\r\n    grid-template-columns: unset;\r\n    row-gap: 1rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { ProgramLabels } from \"components\";\r\nimport { programLabels } from \"commons/__types__\";\r\n\r\ntype ProgramGridProps = {\r\n  labels: programLabels[];\r\n};\r\n\r\nfunction ProgramGrid({ labels }: ProgramGridProps): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      {labels.map(label => (\r\n        <ProgramLabels label={label} />\r\n      ))}\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default ProgramGrid;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-template-columns: 0.7fr 1.3fr;\r\n\r\n  /* Mobile */\r\n  @media screen and (max-width: 740px) {\r\n    grid-auto-flow: row;\r\n    grid-template-rows: 0.6fr 1.4fr;\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const ImgWrapper = styled.section`\r\n  height: 33.5rem;\r\n\r\n  @media screen and (max-width: 740px) {\r\n    height: 20rem;\r\n  }\r\n`;\r\n\r\nexport const LabelsWrapper = styled.section``;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { Img, AboutLabels } from \"components\";\r\n\r\ntype AboutSectionProps = {};\r\n\r\nfunction AboutSection({}: AboutSectionProps): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      <Sc.ImgWrapper>\r\n        <Img\r\n          src={`${process.env.PUBLIC_URL}/img/james-baldwin-b9vkGONY4eI-unsplash.jpg`}\r\n          alt=\"about\"\r\n          objectFit=\"cover\"\r\n        />\r\n      </Sc.ImgWrapper>\r\n      <Sc.LabelsWrapper>\r\n        <AboutLabels />\r\n      </Sc.LabelsWrapper>\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default AboutSection;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-template-columns: 1fr 1fr;\r\n\r\n  /* Mobile */\r\n  @media screen and (max-width: 740px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const ImgWrapper = styled.section`\r\n  @media screen and (max-width: 740px) {\r\n    display: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { ContactForm, Img } from \"components\";\r\n\r\ntype ContactFormProps = {};\r\n\r\nfunction ContactSection({}: ContactFormProps): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      <ContactForm />\r\n      <Sc.ImgWrapper>\r\n        <Img\r\n          src={`${process.env.PUBLIC_URL}/img/we_like_you.jpg`}\r\n          alt=\"unsplash we-like-you\"\r\n          objectFit=\"fill\"\r\n        />\r\n      </Sc.ImgWrapper>\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default ContactSection;\r\n","import styled from \"styled-components\";\r\n\r\nconst bgUrl = `${process.env.PUBLIC_URL}/img/focus_dinner.jpg`;\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 0.5fr 1.5fr;\r\n  width: 100%;\r\n  height: 530px;\r\n  padding: 2rem 6rem;\r\n\r\n  background-image: url(${bgUrl});\r\n  background-position: center;\r\n  background-size: cover;\r\n\r\n  /* Tablet */\r\n  @media screen and (max-width: 1120px) {\r\n    height: 100%;\r\n    padding: 1rem;\r\n    row-gap: 1rem;\r\n    grid-template-rows: unset;\r\n  }\r\n\r\n  /* Mobile */\r\n  @media screen and (max-width: 740px) {\r\n    background-image: none;\r\n    padding: 3rem;\r\n  }\r\n`;\r\n\r\nexport const ImgWrapper = styled.section`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const TitleWrapper = styled.section`\r\n  width: 100%;\r\n  display: grid;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const CardGridWrapper = styled.section``;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { note } from \"commons/__types__\";\r\nimport { UPCOMING_EVENT } from \"commons/string\";\r\nimport { ColumnCardGrid, Typography, Anchor } from \"components\";\r\n\r\ninterface EventsSectionProps {\r\n  notes: note[];\r\n}\r\n\r\nfunction EventsSection({ notes }: EventsSectionProps): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      <Sc.TitleWrapper>\r\n        <Typography styleType=\"h2\" color=\"white\">\r\n          <Anchor to=\"/events\" color=\"white\">\r\n            {UPCOMING_EVENT}\r\n          </Anchor>\r\n        </Typography>\r\n      </Sc.TitleWrapper>\r\n      <Sc.CardGridWrapper>\r\n        <ColumnCardGrid notes={notes} />\r\n      </Sc.CardGridWrapper>\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default EventsSection;\r\n","import styled from \"styled-components\";\r\n\r\nconst bgImg = `${process.env.PUBLIC_URL}/img/papaioannou-kostas-tysecUm5HJA-unsplash.jpg`;\r\nexport const Container = styled.div`\r\n  background-image: url(${bgImg});\r\n  background-position: center;\r\n  background-size: cover;\r\n  height: 33.5rem;\r\n`;\r\n\r\nexport const ContentWrapper = styled.section`\r\n  display: grid;\r\n  align-content: center;\r\n  row-gap: 2rem;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ImgWrapper = styled.section`\r\n  height: 100%;\r\n`;\r\n\r\nexport const TypographyWrapper = styled.section`\r\n  display: grid;\r\n  width: 100%;\r\n  justify-content: center;\r\n  justify-items: center;\r\n`;\r\n\r\nexport const ParagraphWrapper = styled.section`\r\n  display: grid;\r\n  justify-content: center;\r\n  padding: 0 20rem;\r\n\r\n  /* Tablet */\r\n  @media screen and (max-width: 1120px) {\r\n    padding: 0 7rem;\r\n  }\r\n\r\n  /* Mobile */\r\n  @media screen and (max-width: 740px) {\r\n    padding: 0 1rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport {\r\n  WELCOME,\r\n  INTERNATIONAL_STUDENTS,\r\n  SECTION1_PARAGRAPH,\r\n  LOCATION\r\n} from \"commons/string\";\r\nimport { Typography, Paragraph } from \"components\";\r\n\r\nfunction GreetingSection(): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      <Sc.ContentWrapper>\r\n        <Sc.TypographyWrapper>\r\n          <Typography styleType=\"h1\" color=\"white\">\r\n            {WELCOME}\r\n          </Typography>\r\n          <Typography styleType=\"h1\" color=\"secondary\" textAlign=\"center\">\r\n            {INTERNATIONAL_STUDENTS}\r\n          </Typography>\r\n          <Typography styleType=\"h2\" color=\"white\" textAlign=\"center\">\r\n            {LOCATION}\r\n          </Typography>\r\n        </Sc.TypographyWrapper>\r\n        <Sc.ParagraphWrapper>\r\n          <Paragraph color=\"white\">{SECTION1_PARAGRAPH}</Paragraph>\r\n        </Sc.ParagraphWrapper>\r\n      </Sc.ContentWrapper>\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default GreetingSection;\r\n","export const styles = {\r\n  bmBurgerButton: {\r\n    position: \"fixed\",\r\n    width: \"36px\",\r\n    height: \"30px\",\r\n    left: \"36px\",\r\n    top: \"36px\"\r\n  },\r\n  bmBurgerBars: {\r\n    background: \"#f7e70f\"\r\n  },\r\n  bmBurgerBarsHover: {\r\n    background: \"#e3d517\"\r\n  },\r\n  bmCrossButton: {\r\n    height: \"24px\",\r\n    width: \"24px\"\r\n  },\r\n  bmCross: {\r\n    background: \"#bdc3c7\"\r\n  },\r\n  /*\r\n    Sidebar wrapper styles\r\n    Note: Beware of modifying this element as it can break the animations - you should not need to touch it in most cases\r\n  */\r\n  bmMenuWrap: {\r\n    position: \"fixed\",\r\n    height: \"100%\",\r\n    width: \"230px\"\r\n  },\r\n  bmMenu: {\r\n    background: \"#373a47\",\r\n    padding: \"2.5em 1.5em 0\",\r\n    fontSize: \"1.15em\"\r\n  },\r\n  bmMorphShape: {\r\n    fill: \"#373a47\"\r\n  },\r\n  bmItemList: {\r\n    padding: \"0.8em\",\r\n    listStyle: \"none\"\r\n  },\r\n  bmItem: {\r\n    // display: \"grid\",\r\n    // rowGap: \"1rem\"\r\n  },\r\n  bmOverlay: {\r\n    background: \"rgba(0, 0, 0, 0.3)\"\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport * as routes from \"commons/__routes__\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport { NavItem } from \"components\";\r\n\r\ntype HeaderProps = {};\r\n\r\nclass Header extends React.Component<HeaderProps, {}> {\r\n  render() {\r\n    return (\r\n      <Menu styles={Sc.styles}>\r\n        <NavItem to={routes.home}>Home</NavItem>\r\n        <NavItem to={routes.about}>About</NavItem>\r\n        <NavItem to={routes.news}>News</NavItem>\r\n        <NavItem to={routes.forStudents}>For Students</NavItem>\r\n        <NavItem to={routes.forVolunteers}>For Volunteer</NavItem>\r\n        <NavItem to={routes.contact}>Contact</NavItem>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","export const home = \"/home\";\r\nexport const about = \"/about\";\r\nexport const news = \"/news\";\r\nexport const forStudents = \"/forStudents\";\r\nexport const forVolunteers = \"/forVoluneers\";\r\nexport const contact = \"/contact\";\r\nexport const signIn = \"/signIn\";\r\nexport const signUp = \"/signUp\";\r\n","import styled from \"styled-components\";\r\n\r\nconst bgImg = `${process.env.PUBLIC_URL}/img/neonbrand-XEsx2NVpqWY-unsplash.jpg`;\r\n\r\nexport const Container = styled.div`\r\n  background-image: url(${bgImg});\r\n  background-size: cover;\r\n  background-position: center;\r\n\r\n  display: grid;\r\n  padding: 3rem;\r\n\r\n  @media screen and (max-width: 1120px) {\r\n    padding: 2rem 1rem;\r\n  }\r\n\r\n  @media screen and (max-width: 740px) {\r\n    row-gap: 3rem;\r\n  }\r\n`;\r\n\r\nexport const TitleWrapper = styled.section`\r\n  display: grid;\r\n`;\r\n\r\nexport const ContentWrapper = styled.section`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  column-gap: 7rem;\r\n\r\n  @media screen and (max-width: 1120px) {\r\n    column-gap: 3rem;\r\n  }\r\n\r\n  @media screen and (max-width: 740px) {\r\n    grid-auto-flow: row;\r\n    row-gap: 2rem;\r\n  }\r\n`;\r\n\r\nexport const BoxWrapper = styled.div`\r\n  display: grid;\r\n  row-gap: 1rem;\r\n`;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { InformationLabelList, Typography, Anchor } from \"components\";\r\nimport { information } from \"commons/__types__\";\r\nimport { INFORMATION, FORSTUDENTS, FORVOLUNTEER } from \"commons/string\";\r\n\r\ntype InformationSectionProps = {\r\n  stuInfos: information[];\r\n  voluInfos: information[];\r\n};\r\n\r\nfunction InformationSection({\r\n  stuInfos,\r\n  voluInfos\r\n}: InformationSectionProps): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      <Sc.TitleWrapper>\r\n        <Typography styleType=\"h1\" color=\"white\" textAlign=\"center\">\r\n          {INFORMATION}\r\n        </Typography>\r\n      </Sc.TitleWrapper>\r\n      <Sc.ContentWrapper>\r\n        <Sc.BoxWrapper>\r\n          <Typography styleType=\"h2\" textAlign=\"center\">\r\n            <Anchor to=\"/forStudents\" color=\"white\">\r\n              {FORSTUDENTS}\r\n            </Anchor>\r\n          </Typography>\r\n          <InformationLabelList infos={stuInfos} />\r\n        </Sc.BoxWrapper>\r\n        <Sc.BoxWrapper>\r\n          <Typography styleType=\"h2\" textAlign=\"center\">\r\n            <Anchor to=\"/forVolunteer\" color=\"white\">\r\n              {FORVOLUNTEER}\r\n            </Anchor>\r\n          </Typography>\r\n          <InformationLabelList infos={voluInfos} />\r\n        </Sc.BoxWrapper>\r\n      </Sc.ContentWrapper>\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default InformationSection;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  padding: 3rem;\r\n  @media screen and (max-width: 740px) {\r\n    padding: 2rem;\r\n  }\r\n`;\r\n\r\nexport const TypographyWrapper = styled.section`\r\n  display: grid;\r\n`;\r\n\r\nexport const CardsWrapper = styled.section``;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { Typography, Paragraph, RowCardGrid, Anchor } from \"components\";\r\nimport { rowDirectionCard } from \"commons/__types__\";\r\nimport { LATEST_NEWS, LATEST_NEWS_DESC } from \"commons/string\";\r\n\r\ntype NewsSectionProps = {\r\n  cards: rowDirectionCard[];\r\n};\r\n\r\nfunction NewsSection({ cards }: NewsSectionProps): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      <Sc.TypographyWrapper>\r\n        <Typography styleType=\"h1\" color=\"primary\" textAlign=\"center\">\r\n          <Anchor to=\"/news\">{LATEST_NEWS}</Anchor>\r\n        </Typography>\r\n        <Paragraph color=\"gray\">{LATEST_NEWS_DESC}</Paragraph>\r\n      </Sc.TypographyWrapper>\r\n      <Sc.CardsWrapper>\r\n        <RowCardGrid cards={cards} />\r\n      </Sc.CardsWrapper>\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default NewsSection;\r\n","import styled from \"styled-components\";\r\n\r\nconst bgUrl = `${process.env.PUBLIC_URL}/img/annie-spratt-UitqRQD4Z7g-unsplash.jpg`;\r\nconst mobileBgUrl = `${process.env.PUBLIC_URL}/img/chirag-saini-30zA3LsA9ZE-unsplash.jpg`;\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n  grid-template-rows: 0.5fr 1.5fr;\r\n\r\n  background-image: url(${bgUrl});\r\n  background-position: center;\r\n  background-size: cover;\r\n  opacity: 0.9;\r\n\r\n  padding: 3rem 6rem;\r\n  height: 530px;\r\n\r\n  /* Tablet */\r\n  @media screen and (max-width: 1120px) {\r\n    padding: 2rem 4rem;\r\n  }\r\n\r\n  /* Mobile */\r\n  @media screen and (max-width: 740px) {\r\n    grid-template-rows: 7rem auto;\r\n\r\n    background-image: url(${mobileBgUrl});\r\n    background-size: cover;\r\n    height: 100%;\r\n    padding: 1.6rem;\r\n  }\r\n`;\r\n\r\nexport const TitleWrapper = styled.section`\r\n  display: grid;\r\n  justify-content: center;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const ProgramGridWrapper = styled.section``;\r\n","import React from \"react\";\r\nimport * as Sc from \"./style\";\r\nimport { Typography, ProgramGrid } from \"components\";\r\nimport { programLabels } from \"commons/__types__\";\r\n\r\ntype ProgramSectionProps = {\r\n  labels: programLabels[];\r\n};\r\n\r\nfunction ProgramSection({ labels }: ProgramSectionProps): React.ReactElement {\r\n  return (\r\n    <Sc.Container>\r\n      <Sc.TitleWrapper>\r\n        <Typography styleType=\"h1\" color=\"white\">\r\n          Our Program Includes...\r\n        </Typography>\r\n      </Sc.TitleWrapper>\r\n      <Sc.ProgramGridWrapper>\r\n        <ProgramGrid labels={labels} />\r\n      </Sc.ProgramGridWrapper>\r\n    </Sc.Container>\r\n  );\r\n}\r\n\r\nexport default ProgramSection;\r\n","import React from \"react\";\r\nimport {\r\n  AboutSection,\r\n  ContactSection,\r\n  EventsSection,\r\n  GreetingSection,\r\n  Header,\r\n  InformationSection,\r\n  NewsSection,\r\n  ProgramSection\r\n} from \"components\";\r\nimport {\r\n  note,\r\n  information,\r\n  rowDirectionCard,\r\n  programLabels\r\n} from \"commons/__types__\";\r\n\r\ninterface HomeTemplateProps {\r\n  notes: note[];\r\n  stuInfos: information[];\r\n  voluInfos: information[];\r\n  cards: rowDirectionCard[];\r\n  labels: programLabels[];\r\n}\r\n\r\nfunction HomeTemplate({\r\n  notes,\r\n  stuInfos,\r\n  voluInfos,\r\n  cards,\r\n  labels\r\n}: HomeTemplateProps): React.ReactElement {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <GreetingSection />\r\n      <AboutSection />\r\n      <ProgramSection labels={labels} />\r\n      <EventsSection notes={notes} />\r\n      <NewsSection cards={cards} />\r\n      <InformationSection stuInfos={stuInfos} voluInfos={voluInfos} />\r\n      <ContactSection />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomeTemplate;\r\n","import {\r\n  information,\r\n  note,\r\n  programLabels,\r\n  rowDirectionCard\r\n} from \"commons/__types__\";\r\nimport {\r\n  COLUMN_CARD_TITLE,\r\n  COLUMN_CARD_LOCATION,\r\n  COLUMN_CARD_DATE,\r\n  COLUMN_CARD_BODY\r\n} from \"commons/string\";\r\nimport uuid4 from \"uuid4\";\r\n\r\nexport const stuInfos: information[] = [\r\n  {\r\n    title: \"ISMC Guide Book for New Comer\",\r\n    date: \"January 01th, 2020\"\r\n  },\r\n  {\r\n    title: \"ISMC Guide Book for New Comer\",\r\n    date: \"January 01th, 2020\"\r\n  },\r\n  {\r\n    title: \"ISMC Guide Book for New Comer\",\r\n    date: \"January 01th, 2020\"\r\n  }\r\n];\r\n\r\nexport const voluInfos: information[] = [\r\n  {\r\n    title: \"ISMC Guide Book for New Comer\",\r\n    date: \"January 01th, 2020\"\r\n  },\r\n  {\r\n    title: \"ISMC Guide Book for New Comer\",\r\n    date: \"January 01th, 2020\"\r\n  },\r\n  {\r\n    title: \"ISMC Guide Book for New Comer\",\r\n    date: \"January 01th, 2020\"\r\n  }\r\n];\r\n\r\nexport const notes: note[] = [\r\n  {\r\n    title: COLUMN_CARD_TITLE,\r\n    body: COLUMN_CARD_BODY,\r\n    date: COLUMN_CARD_DATE,\r\n    to: uuid4(),\r\n    src: \"\"\r\n  },\r\n  {\r\n    title: COLUMN_CARD_TITLE,\r\n    body: COLUMN_CARD_BODY,\r\n    date: COLUMN_CARD_DATE,\r\n    to: uuid4(),\r\n    src: \"\"\r\n  },\r\n  {\r\n    title: COLUMN_CARD_TITLE,\r\n    body: COLUMN_CARD_BODY,\r\n    date: COLUMN_CARD_DATE,\r\n    to: uuid4(),\r\n    src: \"\"\r\n  }\r\n];\r\n\r\nexport const cards: rowDirectionCard[] = [\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/img/focus_dinner.jpg`,\r\n    alt: \"focus_dinner\",\r\n    to: uuid4()\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/img/focus_dinner.jpg`,\r\n    alt: \"focus_dinner\",\r\n    to: uuid4()\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/img/focus_dinner.jpg`,\r\n    alt: \"focus_dinner\",\r\n    to: uuid4()\r\n  }\r\n];\r\n\r\nexport const labels: programLabels[] = [\r\n  {\r\n    title: \"Friendship Partner\",\r\n    content:\r\n      \"connecting interested individuals, couples and families with international students who would like a Canadian friend. This involves hospitality in sharing some meals together during the year, possibly inviting students to share in special cultural events and festivals, and English conversation practice.\"\r\n  },\r\n  {\r\n    title: \"Friendship Partner\",\r\n    content:\r\n      \"connecting interested individuals, couples and families with international students who would like a Canadian friend. This involves hospitality in sharing some meals together during the year, possibly inviting students to share in special cultural events and festivals, and English conversation practice.\"\r\n  },\r\n  {\r\n    title: \"Friendship Partner\",\r\n    content:\r\n      \"connecting interested individuals, couples and families with international students who would like a Canadian friend. This involves hospitality in sharing some meals together during the year, possibly inviting students to share in special cultural events and festivals, and English conversation practice.\"\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport HomeTemplates from \"./templates\";\r\nimport {\r\n  notes,\r\n  stuInfos,\r\n  voluInfos,\r\n  cards,\r\n  labels\r\n} from \"commons/__mock_json__\";\r\n\r\ntype HomePageProps = {};\r\n\r\nfunction HomePage({}: HomePageProps): React.ReactElement {\r\n  return (\r\n    <>\r\n      <HomeTemplates\r\n        notes={notes}\r\n        stuInfos={stuInfos}\r\n        voluInfos={voluInfos}\r\n        cards={cards}\r\n        labels={labels}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { Home } from \"pages\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    font-family: \"Open Sans\", Arial, sans-serif;\r\n  }\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <GlobalStyle />\r\n      <Router>\r\n        <Home />\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}